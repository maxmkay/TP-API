name: Build, push and deploy
on:
  workflow_call:
  push:
    branches:
      - live

jobs:
  buildpushdeploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_DEPLOYER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEPLOYER_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build Docker image ${{ vars.ECR_REPOSITORY }}:latest
        run: |
          echo Building Docker image...
          docker build -t tp-api:latest .
          docker tag tp-api:latest ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:latest

      - name: Login to Amazon ECR ${{ vars.ECR_REGISTRY }}
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker image to ECR
        run: docker push ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:latest

      - name: Install AWS CLI
        run: |
          if ! dpkg -l | grep -q "awscli"; then
            echo "awscli is not installed. Installing..."
            sudo apt-get update
            sudo apt-get install -y awscli
          else
            echo "awscli is already installed."
          fi

      - name: Refresh the Beanstalk application
        run: |
          # VERSION_LABEL=$(date)
          # aws elasticbeanstalk create-application-version --application-name ${{ vars.APP_NAME }} --version-label "$VERSION_LABEL" --source-bundle S3Bucket="codepipeline-us-east-1-299439134221",S3Key="tp-api-prod/SourceArti/gV1dWsN"
          VERSION_LABEL=latest
          aws elasticbeanstalk update-environment --application-name ${{ vars.APP_NAME }} --environment-name ${{ vars.APP_ENV_NAME }}  --version-label "$VERSION_LABEL"

      - name: While Beanstalk deploys, delete untagged images in ECR
        continue-on-error: true
        run: aws ecr batch-delete-image --repository-name ${{ vars.ECR_REPOSITORY }} --image-ids $(aws ecr list-images --repository-name ${{ vars.ECR_REPOSITORY }} --filter "tagStatus=UNTAGGED" --query 'imageIds[*]' --output json | jq -c)

      - name: Wait for the environment to finish update
        run: aws elasticbeanstalk wait environment-updated --application-name ${{ vars.APP_NAME }} --environment-name ${{ vars.APP_ENV_NAME }}
